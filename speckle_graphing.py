'''
Takes in a folder to operate in. This folder should contain
files generated by speckle_to_track.py
'''

import os
import sys
import speckle
import pandas as pd
import numpy as np
from typing import *
from matplotlib import pyplot as plt


files: List[str] = [
    'control_tracks.csv',
    '1khz_tracks.csv',
    '5khz_tracks.csv',
    '10khz_tracks.csv',
    '25khz_tracks.csv',
    '50khz_tracks.csv',
    '75khz_tracks.csv',
    '100khz_tracks.csv']


if __name__ == '__main__':
    assert len(sys.argv) == 2

    root: str = sys.argv[1]
    i: int = 0
    v_lines: List[int] = [0]
    speeds: List[float] = []

    means: List[float] = []
    stds: List[float] = []
    
    for file in files:

        df: pd.DataFrame = pd.read_csv(root + '/' + file)
        df.drop(inplace=True, labels=[0, 1, 2])

        cur_speeds: List[float] = []
        for row in df.iterrows():
            cur_speeds.append(float(row[1]['MEAN_STRAIGHT_LINE_SPEED']))
            i += 1

        speeds += cur_speeds
        means.append(np.mean(cur_speeds))
        stds.append(np.std(cur_speeds))

        v_lines.append(i)

    plt.scatter([j for j in range(i)], speeds, c='b')
    plt.vlines(v_lines, ymin=0, ymax=max(speeds))
    
    plt.scatter(v_lines[:len(means)], means, c='r')

    plt.scatter(v_lines[:len(means)], [means[j] - stds[j] for j in range(len(means))], c='r')
    plt.scatter(v_lines[:len(means)], [means[j] + stds[j] for j in range(len(means))], c='r')

    plt.show()
